#!/usr/bin/make -f

export DEB_BUILD_MAINT_OPTIONS = hardening=+all optimize=-lto

DPKG_EXPORT_BUILDFLAGS = 1

include /usr/share/dpkg/default.mk

DEB_HOST_ARCH_BITS ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_BITS)

export DESTDIR = $(CURDIR)/debian/tmp

export DEB_BUILD_ARCH ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)
export DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)

# As of 2022-09-27 fmt > 9 has deprecated an API that is used extensively
# throughout the code base.
#
# See:
#   Upstream: https://tracker.ceph.com/issues/56610
#   Debian: https://salsa.debian.org/ceph-team/ceph/-/merge_requests/9
CXXFLAGS += -DFMT_DEPRECATED_OSTREAM

CONFFLAGS := -DCMAKE_BUILD_TYPE=RelWithDebInfo
CONFFLAGS += -DCMAKE_C_FLAGS_RELWITHDEBINFO="$(CFLAGS)"
CONFFLAGS += -DCMAKE_CXX_FLAGS_RELWITHDEBINFO="$(CXXFLAGS)"
CONFFLAGS += -DCMAKE_INSTALL_LIBEXECDIR=/usr/lib
CONFFLAGS += -DCMAKE_INSTALL_SYSCONFDIR=/etc
CONFFLAGS += -DCEPH_SYSTEMD_ENV_DIR=/etc/default
CONFFLAGS += -DSYSTEMD_SYSTEM_UNIT_DIR=/lib/systemd/system
CONFFLAGS += -DDASHBOARD_FRONTEND_LANGS="en-US"
CONFFLAGS += -DENABLE_GIT_VERSION=ON
CONFFLAGS += -DWITH_BLUESTORE=ON
CONFFLAGS += -DWITH_BLUESTORE_PMEM=OFF
CONFFLAGS += -DWITH_BROTLI=OFF
CONFFLAGS += -DWITH_CEPHFS=ON
CONFFLAGS += -DWITH_CEPHFS_JAVA=OFF
CONFFLAGS += -DWITH_CEPHFS_SHELL=ON
CONFFLAGS += -DWITH_DEBUG=ON
CONFFLAGS += -DWITH_DOKAN=OFF
CONFFLAGS += -DWITH_DPDK=OFF
CONFFLAGS += -DWITH_FIO=OFF
CONFFLAGS += -DWITH_FUSE=ON
CONFFLAGS += -DWITH_GRAFANA=OFF
CONFFLAGS += -DWITH_GSSAPI=OFF
CONFFLAGS += -DWITH_KRBD=ON
CONFFLAGS += -DWITH_KVS=OFF
CONFFLAGS += -DWITH_LIBCEPHFS=ON
CONFFLAGS += -DWITH_LIBCEPHSQLITE=ON
CONFFLAGS += -DWITH_LIBRADOSSTRIPER=ON
CONFFLAGS += -DWITH_LIBURING=ON
CONFFLAGS += -DWITH_LZ4=ON
CONFFLAGS += -DWITH_MANPAGE=ON
CONFFLAGS += -DWITH_MGR=ON
CONFFLAGS += -DWITH_MGR_DASHBOARD_FRONTEND=OFF
CONFFLAGS += -DWITH_MGR_ROOK_CLIENT=OFF
CONFFLAGS += -DWITH_OCF=ON
CONFFLAGS += -DWITH_OPENLDAP=ON
CONFFLAGS += -DWITH_PYTHON3=3
CONFFLAGS += -DWITH_QAT=OFF
CONFFLAGS += -DWITH_QATZIP=OFF
CONFFLAGS += -DWITH_RADOSGW=ON
CONFFLAGS += -DWITH_RADOSGW_AMQP_ENDPOINT=OFF
CONFFLAGS += -DWITH_RADOSGW_BEAST_OPENSSL=ON
CONFFLAGS += -DWITH_RADOSGW_DBSTORE=OFF
CONFFLAGS += -DWITH_RADOSGW_KAFKA_ENDPOINT=OFF
CONFFLAGS += -DWITH_RADOSGW_LUA_PACKAGES=OFF
CONFFLAGS += -DWITH_RADOSGW_SELECT_PARQUET=OFF
CONFFLAGS += -DWITH_RBD=ON
CONFFLAGS += -DWITH_RBD_RWL=OFF
CONFFLAGS += -DWITH_RBD_SSD_CACHE=OFF
CONFFLAGS += -DWITH_REENTRANT_STRSIGNAL=ON
CONFFLAGS += -DWITH_SELINUX=OFF
CONFFLAGS += -DWITH_SPDK=OFF
CONFFLAGS += -DWITH_SYSTEMD=ON
CONFFLAGS += -DWITH_SYSTEM_ARROW=OFF
CONFFLAGS += -DWITH_SYSTEM_BOOST=OFF
CONFFLAGS += -DWITH_SYSTEM_GTEST=OFF
CONFFLAGS += -DWITH_SYSTEM_LIBURING=ON
CONFFLAGS += -DWITH_SYSTEM_NPM=OFF
CONFFLAGS += -DWITH_SYSTEM_PMDK=OFF
CONFFLAGS += -DWITH_SYSTEM_ROCKSDB=OFF
CONFFLAGS += -DWITH_SYSTEM_UTF8PROC=ON
CONFFLAGS += -DWITH_SYSTEM_ZSTD=ON
CONFFLAGS += -DWITH_TESTS=OFF
CONFFLAGS += -DWITH_THREAD_SAFE_RES_QUERY=OFF
CONFFLAGS += -DWITH_XFS=ON
CONFFLAGS += -DWITH_ZBD=OFF
CONFFLAGS += -DWITH_ZFS=OFF

# Tracing support.
CONFFLAGS += -DWITH_BABELTRACE=OFF
CONFFLAGS += -DWITH_BLKIN=OFF
CONFFLAGS += -DWITH_EVENTTRACE=OFF
CONFFLAGS += -DWITH_JAEGER=OFF
CONFFLAGS += -DWITH_LTTNG=OFF
CONFFLAGS += -DWITH_OSD_INSTRUMENT_FUNCTIONS=OFF

# Enable crimson build on supported architectures.
ifneq ($(findstring $(DEB_HOST_ARCH),amd64 arm64 ppc64el s390x),)
CONFFLAGS += -DWITH_SEASTAR=OFF
# CONFFLAGS += -DWITH_SEASTAR=ON
# CONFFLAGS += -DSeastar_CXX_FLAGS=-DSEASTAR_DEFAULT_ALLOCATOR
endif

# Required when build without system boost (WITH_SYSTEM_BOOST=OFF).
ifneq ($(filter parallel=%,$(DEB_BUILD_OPTIONS)),)
NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
CONFFLAGS += -DBOOST_J=$(NUMJOBS)
endif

MAX_PARALLEL ?= $(shell $(CURDIR)/debian/scripts/calc-max-parallel.sh)

%:
	dh $@ --buildsystem=cmake+ninja --with=python3 $(MAX_PARALLEL)

override_dh_auto_configure:
	dh_auto_configure --buildsystem=cmake+ninja -- $(CONFFLAGS)

override_dh_auto_install:
	dh_auto_install --buildsystem=cmake+ninja --destdir=$(DESTDIR)

	install -D -m 644 debian/extras/ceph/rbdmap $(DESTDIR)/etc/ceph/rbdmap

	install -D -m 440 debian/extras/sudoers.d/ceph-smartctl $(DESTDIR)/etc/sudoers.d/ceph-smartctl

	install -D -m 644 etc/sysctl/90-ceph-osd.conf $(DESTDIR)/etc/sysctl.d/30-ceph-osd.conf

	install -D -m 644 udev/50-rbd.rules $(DESTDIR)/lib/udev/rules.d/50-rbd.rules

	install -D -m 755 src/tools/rbd_nbd/rbd-nbd_quiesce $(DESTDIR)/usr/libexec/rbd-nbd/rbd-nbd_quiesce

	if [ ! -f $(DESTDIR)/usr/bin/ceph-dencoder ]; then \
		install -m 755 debian/extras/ceph-dencoder-oom $(DESTDIR)/usr/bin/ceph-dencoder; \
	fi

	install -m 755 src/cephadm/cephadm $(DESTDIR)/usr/sbin/cephadm

	install -D -m 644 monitoring/ceph-mixin/prometheus_alerts.yml $(DESTDIR)/etc/prometheus/ceph/ceph_default_alerts.yml

	rm -f -r $(DESTDIR)/etc/bash_completion.d

	rm -f $(DESTDIR)/etc/init.d/ceph

# Remove drop.ceph.com ssh stuff.
	rm -f $(DESTDIR)/usr/share/ceph/known_hosts_drop.ceph.com
	rm -f $(DESTDIR)/usr/share/ceph/id_rsa_drop.ceph.com
	rm -f $(DESTDIR)/usr/share/ceph/id_rsa_drop.ceph.com.pub

# Use systemd units from debian/extras/systemd.
	rm $(DESTDIR)/lib/systemd/system/*

# This tool is obsolete; mons now create these keys on their own.
# It will be removed in the next release.
	rm -f $(DESTDIR)/usr/sbin/ceph-create-keys
	rm -f $(DESTDIR)/usr/share/man/man8/ceph-create-keys.8

# NOTE: Ensure that any versioned erasure coding test code is dropped from
# the package install - package ships unversioned modules.
	rm -f $(DESTDIR)/usr/lib/*/ceph/erasure-code/libec_*.so.*
	find $(DESTDIR)/usr/lib/*/ceph/erasure-code -type l -delete || :

	rm -f -r $(DESTDIR)/usr/share/ceph/mgr/diskprediction_local

# Avoid running out of disk space.
	rm -f -r $(CURDIR)/obj-*-linux-gnu

# Do not run tests.
override_dh_auto_test:

# doc/changelog is a directory, which confuses dh_installchangelogs.
override_dh_installchangelogs:
	dh_installchangelogs --exclude doc/changelog

override_dh_installsystemd:
# Ensure systemd units are NOT automatically enabled and started.
# Enable systemd targets only.
# Start systemd targets only.
	dh_installsystemd --no-stop-on-upgrade --no-restart-after-upgrade -Xceph-mon.service -Xceph-osd.service -X ceph-mds.service

override_dh_strip:
	dh_strip -p ceph-base --dbg-package=ceph-base-dbg
	dh_strip -p ceph-common --dbg-package=ceph-common-dbg
	# dh_strip -p ceph-crimson-osd --dbg-package=ceph-crimson-osd-dbg
	dh_strip -p ceph-fuse
	dh_strip -p ceph-immutable-object-cache --dbg-package=ceph-immutable-object-cache-dbg
	dh_strip -p ceph-mds --dbg-package=ceph-mds-dbg
	dh_strip -p ceph-mgr --dbg-package=ceph-mgr-dbg
	dh_strip -p ceph-mon --dbg-package=ceph-mon-dbg
	dh_strip -p ceph-osd --dbg-package=ceph-osd-dbg
	dh_strip -p ceph-test
	dh_strip -p cephfs-mirror --dbg-package=cephfs-mirror-dbg
	dh_strip -p libcephfs2 --dbg-package=libcephfs2-dbg
	dh_strip -p librados-dev
	dh_strip -p librados2 --dbg-package=librados2-dbg
	dh_strip -p libradosstriper1 --dbg-package=libradosstriper1-dbg
	dh_strip -p librbd1 --dbg-package=librbd1-dbg
	dh_strip -p librgw2 --dbg-package=librgw2-dbg
	dh_strip -p libsqlite3-mod-ceph --dbg-package=libsqlite3-mod-ceph-dbg
	dh_strip -p radosgw --dbg-package=radosgw-dbg
	dh_strip -p rbd-fuse --dbg-package=rbd-fuse-dbg
	dh_strip -p rbd-mirror --dbg-package=rbd-mirror-dbg
	dh_strip -p rbd-nbd --dbg-package=rbd-nbd-dbg

# No -dbg packages for python3 bindings.
	dh_strip -p python3-cephfs
	dh_strip -p python3-rados
	dh_strip -p python3-rbd
	dh_strip -p python3-rgw

override_dh_makeshlibs:
# Exclude private erasure-code plugins.
	dh_makeshlibs -X/usr/lib/$(DEB_HOST_MULTIARCH)/ceph/erasure-code

override_dh_shlibdeps:
	dh_shlibdeps -a --exclude=erasure-code --exclude=rados-classes --exclude=compressor

override_dh_python3:
	for i in ceph-base ceph-common ceph-mgr ceph-osd cephadm cephfs-shell cephfs-top; do \
		dh_python3 -p $$i --shebang=/usr/bin/python3; \
	done

	for i in ceph ceph-argparse cephfs ceph-common rados rbd rgw; do \
		dh_python3 -p python3-$$i --shebang=/usr/bin/python3; \
	done

# Do not run dwz.
override_dh_dwz:
